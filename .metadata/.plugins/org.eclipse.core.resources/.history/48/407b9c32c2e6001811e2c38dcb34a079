package application;

import java.net.URL;
import java.util.ResourceBundle;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Accordion;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.control.Tab;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.control.TitledPane;

public class MainController implements Initializable{
	//CUSTOMER TAB
	@FXML
	private Tab customerTab;
	@FXML
	private Accordion customerAcc;
	@FXML
	private TitledPane cusOrdersPane;
	@FXML
	private TitledPane newOrdersPane;
	//Customer Orders
	@FXML
	private TableView<Order> cusOrders;
	@FXML
	private TableColumn<Order, Integer> cusOrdersIDCol;
	@FXML
	private TableColumn<Order, Integer> cusOrdersSalesRepCol;
	@FXML
	private TableColumn<Order, String> cusOrdersShipperCol;
	@FXML
	private TableColumn<Order, String> cusOrdersDateCol;
	@FXML
	private TableColumn<Order, String> cusOrdersStatusCol;
	@FXML
	private Button cusOrdersModBut;
	@FXML
	private Button cusOrdersDelBut;
	@FXML
	private Button cusOrdersViewBut;
	@FXML
	private TextArea cusOrdersMSG;
	//Customer New Order
	//=====Customer details=====
	@FXML
	private TextField cusNameField;
	@FXML
	private TextField cusLastNameField;
	@FXML
	private TextField cusCompanyField;
	@FXML
	private TextField cusTitleField;
	@FXML
	private TextField cusEmailField;
	@FXML
	private TextField cusPhoneNumberField;
	@FXML
	private TextField cusAddressField;
	@FXML
	private TextField cusCityField;
	@FXML
	private TextField cusProvinceField;
	@FXML
	private TextField cusPostalCodeField;
	@FXML
	private TextField cusCountryField;
	@FXML
	private TextField cusSalesRepIdField;
	@FXML
	private Button cusDetailsBut;
	//=====Order Details=====
	@FXML
	private ComboBox<String> product1Box;
	@FXML
	private ComboBox<String> product2Box;
	@FXML
	private ComboBox<String> product3Box;
	@FXML
	private ComboBox<String> product4Box;
	@FXML
	private ComboBox<String> product5Box;
	@FXML
	private ComboBox<String> product6Box;
	@FXML
	private TextField product1QuantityField;
	@FXML
	private TextField product2QuantityField;
	@FXML
	private TextField product3QuantityField;
	@FXML
	private TextField product4QuantityField;
	@FXML
	private TextField product5QuantityField;
	@FXML
	private TextField product6QuantityField;
	@FXML
	private Button orderDetailsBut;
	//=====Payment And Shipping=====
	@FXML
	private TextField shipNameField;
	@FXML
	private TextField shipAddressField;
	@FXML
	private TextField shipCityField;
	@FXML
	private TextField shipProvinceField;
	@FXML
	private TextField shipPostalCodeField;
	@FXML
	private TextField shipCountryField;
	@FXML
	private RadioButton shipperARadio;
	@FXML
	private RadioButton shipperBRadio;
	@FXML
	private RadioButton shipperCRadio;
	@FXML
	private ComboBox<String> paymentTypeBox;
	@FXML
	private Label subtotalLabel;
	@FXML
	private Label taxesLabel;
	@FXML
	private Button submitOrder;
	//======================================
	//EMPLOYEE TAB
	@FXML
	private Tab employeeTab;
	@FXML
	private Accordion employeeAcc;
	@FXML
	private TitledPane allOrdersPane;
	@FXML
	private TitledPane yourOrdersPane;
	//Employee All Orders
	@FXML
	private TableView<Order> allOrders;
	@FXML
	private TableColumn<Order, String> allOrdersIDCol;
	@FXML
	private TableColumn<Order, String> allOrdersEmployeeCol;
	@FXML
	private TableColumn<Order, String> allOrdersSupplierCol;
	@FXML
	private TableColumn<Order, String> allOrdersCustomerCol;
	@FXML
	private TableColumn<Order, String> allOrdersDateCol;
	@FXML
	private TableColumn<Order, String> allOrdersStatusCol;
	@FXML
	private Button allOrdersModBut;
	@FXML
	private Button allOrdersDelBut;
	@FXML
	private Button allOrdersViewBut;
	@FXML
	private TextArea allOrdersMSG;
	//Employee Your Orders
	@FXML
	private TableView<Order> yourOrders;
	@FXML
	private TableColumn<Order, String> yourOrdersIDCol;
	@FXML
	private TableColumn<Order, String> yourOrdersEmployeeCol;
	@FXML
	private TableColumn<Order, String> yourOrdersSupplierCol;
	@FXML
	private TableColumn<Order, String> yourOrdersCustomerCol;
	@FXML
	private TableColumn<Order, String> yourOrdersDateCol;
	@FXML
	private TableColumn<Order, String> yourOrdersStatusCol;
	@FXML
	private Button yourOrdersModBut;
	@FXML
	private Button yourOrdersDelBut;
	@FXML
	private Button yourOrdersViewBut;
	@FXML
	private TextArea yourOrdersMSG;
	@FXML
	private Label yourOrdersLabel;
	//======================================
	//LOGIN
	@FXML
	private TextField usernameField;
	@FXML
	private TextField passwordField;
	@FXML
	private RadioButton employeeRadio;
	@FXML
	private RadioButton customerRadio;
	@FXML
	private Button newEmployeeBut;
	@FXML
	private Button newCustomerBut;
	@FXML
	private TextField loginMSG;
	@FXML
	private Button loginSubmitBut;

	private ObservableList<Order> customerData =
			FXCollections.observableArrayList(
					new Order(0, 0));

	@Override
	public void initialize(URL location, ResourceBundle resources) {
		cusOrdersIDCol.setCellValueFactory(cellData -> cellData.getValue().orderIdProperty().asObject());
		cusOrdersDateCol.setCellValueFactory(cellData -> cellData.getValue().dateProperty());
		cusOrdersStatusCol.setCellValueFactory(cellData -> cellData.getValue().statusProperty());
		cusOrdersSalesRepCol.setCellValueFactory(cellData -> cellData.getValue().empIdProperty().asObject());
		customerAcc.setDisable(true);
		employeeAcc.setDisable(true);
		retrieveData();

	}
	String password = "";
	String username = "";
	boolean employee = false;
	//TODO Add foreign key to employee_id column

	public void checkPassword()
	{
		ObservableList<User> UserList=FXCollections.observableArrayList();
		try {
			UserList=OrdersFunctions.getAllUsers();
		} catch (Exception e) {
			e.printStackTrace();
		}
		ObservableList<User> EmployeeList=FXCollections.observableArrayList();
		ObservableList<User> CustomerList=FXCollections.observableArrayList();
		for(int i=0;i<UserList.size();i++)
		{
			User user = UserList.get(i);
			if(user.getCustomerId()==0)
			{
				EmployeeList.add(user);
			}
			else if(user.getEmployeeId()==0)
			{
				CustomerList.add(user);
			}
		}
		if(!usernameField.getText().equals("") && !passwordField.getText().equals(""))
		{
			username=usernameField.getText();
			password=passwordField.getText();
			//0 is customer, 1 is employee
			if(employeeRadio.isSelected())
			{
				for(int i=0;i<EmployeeList.size();i++)
				{
					User user=EmployeeList.get(i);
					if(user.getUsername().equals(username))
					{
						if(user.getPassword().equals(password))
						{
							userId=user.getId();
						}
						else
						{
							loginMSG.setText("Wrong Password");
						}
					}
				}
			}
			else if(customerRadio.isSelected())
			{
				for(int i=0;i<CustomerList.size();i++)
				{
					
				}
			}
			else
			{
				loginMSG.setText("Please select employee or customer");
			}
		}
		else if(usernameField.getText().equals("") && !passwordField.getText().equals(""))
		{
			loginMSG.setText("Please enter username");
		}
		else if(passwordField.getText().equals("") && !usernameField.getText().equals("") )
		{
			loginMSG.setText("Please enter password");
		}
		else if(usernameField.getText().equals("") && passwordField.getText().equals(""))
		{
			loginMSG.setText("Please enter username and password");
		}
	}

	public void disableTabs()
	{
		//disable all tabs
	}
	public void enableTabs(boolean employee)
	{
		if(employee)
		{
			employeeAcc.setDisable(false);
			//enable employee tab	
		}
		else
		{
			customerAcc.setDisable(false);
			//enable customer tab
		}
	}

	public void retrieveData()
	{
		//make a method in OrdersFunctions to add all orders, 
		//in accordance to the constructors of the order model,
		//to the customerData ObservableArrayList
	}

















}
