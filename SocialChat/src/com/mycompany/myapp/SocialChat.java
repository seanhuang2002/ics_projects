package com.mycompany.myapp;


import static com.codename1.ui.CN.addNetworkErrorListener;
import static com.codename1.ui.CN.getCurrentForm;
import static com.codename1.ui.CN.updateNetworkThreadCount;

import com.codename1.io.Log;
import com.codename1.social.FacebookConnect;
import com.codename1.social.GoogleConnect;
import com.codename1.social.Login;
import com.codename1.ui.Button;
import com.codename1.ui.Container;
import com.codename1.ui.Dialog;
import com.codename1.ui.FontImage;
import com.codename1.ui.Form;
import com.codename1.ui.Toolbar;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.plaf.Style;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class SocialChat {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        showLoginForm();
    }

    private void showLoginForm() {
        Form loginForm = new Form();

        // the blue theme styles the title area normally this is good but in this case we don't want the blue bar at the top
        loginForm.getTitleArea().setUIID("Container");
        loginForm.setLayout(new BorderLayout());
        loginForm.setUIID("MainForm");
        Container cnt = new Container(new BoxLayout(BoxLayout.Y_AXIS));
        cnt.setUIID("Padding");
        Button loginWithGoogle = new Button("Signin with Google");
        loginWithGoogle.setUIID("LoginButtonGoogle");
        Button loginWithFacebook = new Button("Signin with Facebook");
        loginWithFacebook.setUIID("LoginButtonFacebook");
        Style iconFontStyle = UIManager.getInstance().getComponentStyle("IconFont");
        loginWithFacebook.setIcon(FontImage.create(" \ue96c ", iconFontStyle));
        loginWithGoogle.setIcon(FontImage.create(" \ue976 ", iconFontStyle));
        cnt.addComponent(loginWithGoogle);
        cnt.addComponent(loginWithFacebook);
        loginWithGoogle.addActionListener((e) -> {
            doLogin(GoogleConnect.getInstance());
        });
        loginWithFacebook.addActionListener((e) -> {
            doLogin(FacebookConnect.getInstance());
        });
        loginForm.addComponent(BorderLayout.SOUTH, cnt);
        loginForm.show();
    }

    void doLogin(Login lg) {
        // TODO...
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
